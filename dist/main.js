/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/DOM/mainPage */ \"./src/modules/DOM/mainPage.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/modules/OPS/storage.js */ \"./src/modules/OPS/storage.js\");\n\n\n\nlet render = (function () {\n\n    if(!localStorage.getItem('myProjects')){\n        console.log(\"hello\")\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_1__.saveProjects)();\n        _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.mainRender.loadRightDiv();\n        _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.mainRender.loadStartScreen();\n        _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.sideRender.renderSideBar();\n        \n    } else {\n        console.log(\"hello2\")\n        _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.mainRender.loadRightDiv();\n        _modules_DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.sideRender.renderSideBar();\n        (0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_1__.loadProjects)()\n        \n    }\n\n    // mainRender.loadRightDiv();\n    // mainRender.loadStartScreen();\n    // sideRender.renderSideBar();\n\n})();\n\n\n\n//# sourceURL=webpack://todolist/./src/index.js?");

/***/ }),

/***/ "./src/modules/DOM/columns.js":
/*!************************************!*\
  !*** ./src/modules/DOM/columns.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"columnsRender\": () => (/* binding */ columnsRender)\n/* harmony export */ });\n/* harmony import */ var _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../OPS/columnLogic.js */ \"./src/modules/OPS/columnLogic.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tasks */ \"./src/modules/DOM/tasks.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/IMG/delete.png */ \"./src/modules/IMG/delete.png\");\n\n\n\n\n\nlet columnsRender = (function() {\n\n    let currentProject\n\n    return {\n        newColumnBtn(divID, projectID) {\n            //Renders the new column button\n            let newColumnBtn = document.createElement(\"div\")\n            newColumnBtn.setAttribute(\"id\", \"newColumnBtn\")\n            newColumnBtn.addEventListener('click', function() {      \n                columnsRender.newColumn(divID, projectID)\n                currentProject = this.parentElement.parentElement\n            })\n            let mainDiv = document.getElementById(divID)\n            mainDiv.appendChild(newColumnBtn)\n            //Renders the button text\n            let newColumnBtnText = document.createElement(\"h1\")\n            newColumnBtnText.innerHTML = \"+\"\n            newColumnBtn.appendChild(newColumnBtnText)\n        },\n        hideNewColumnBtn() {\n            //Tests to see if there are too many columns\n            if(_OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.objects.length >= 4) {\n            newColumnBtn.style.display = \"none\";\n            }\n            else {\n                newColumnBtn.style.display = \"inherit\";\n            }\n        },\n        newColumn(divID, projectID) {\n            //Adds New Column\n            let newColumn = document.createElement(\"div\")\n            newColumn.setAttribute(\"class\", \"column\")\n            _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.create(projectID)\n            let columnID = \"col\" + (_OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.objects.length - 1)\n            newColumn.setAttribute(\"id\", columnID)\n            let mainDiv = document.getElementById(divID)\n            mainDiv.appendChild(newColumn)\n                //Adds Column Header\n                let newColumnHeader = document.createElement(\"div\")\n                newColumnHeader.setAttribute(\"class\", \"columnHeader\")\n                newColumn.appendChild(newColumnHeader)\n                    // //Column Colour\n                    let columnDelete = document.createElement(\"img\")\n                    columnDelete.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__\n                    columnDelete.setAttribute(\"class\", \"columnDelete\")\n                    columnDelete.addEventListener('click', function(){\n                        _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.delete(this.parentElement.parentElement.id)\n                    })\n                    newColumnHeader.appendChild(columnDelete)\n                    //Column Title\n                    let newColumnTitle = document.createElement(\"div\")\n                    newColumnTitle.setAttribute(\"class\", \"columnTitle\")\n                    newColumnTitle.innerHTML = \"Placeholder Title\"\n                    newColumnTitle.addEventListener('click', function(){\n                        columnsRender.editColumnTitle(columnID, divID)\n                    })\n\n                    \n                    newColumnHeader.appendChild(newColumnTitle)\n                //Adds Column Body\n                let newColumnBody = document.createElement(\"div\")\n                newColumnBody.setAttribute(\"class\", \"columnBody\")\n                newColumn.appendChild(newColumnBody)\n            _tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.newTaskBtn(columnID)\n            columnsRender.hideNewColumnBtn()\n        },\n        editColumnTitle(columnID, projDivID) {\n            //Create Pop Up Window\n            let window = document.createElement(\"div\")\n            window.setAttribute(\"class\", \"popWindow\")\n            let mainDiv = document.getElementById(projDivID)\n            mainDiv.appendChild(window)\n            //Create Form\n            let form = document.createElement(\"form\");\n            form.setAttribute(\"id\", \"columnform\")\n            form.textContent = \"Edit title\"\n            window.appendChild(form)\n            //Close Form Button\n            let closeFormBtn = document.createElement(\"div\")\n            closeFormBtn.id = \"closeFormBtn\"\n            closeFormBtn.textContent = \"x\"\n            closeFormBtn.addEventListener('click', function(){\n                window.style.display = \"none\"\n            })\n            form.appendChild(closeFormBtn)\n\n            //Create input element for column title\n            let columnTitleLable = document.createElement(\"label\")\n            columnTitleLable.for = \"columntitle\"\n            columnTitleLable.textContent = \"Column name: \"\n            form.appendChild(columnTitleLable)\n            let columnTitle = document.createElement(\"input\")\n            columnTitle.type = \"text\"\n            columnTitle.id = \"columnTitle\"\n            columnTitle.name = \"columnTitle\"\n            form.appendChild(columnTitle)\n\n            //Create Submit Button\n            let submitBtn = document.createElement(\"input\")\n            submitBtn.type = \"submit\"\n            submitBtn.name = \"submit\"\n            submitBtn.setAttribute(\"id\", \"columnSubmitBtn\")\n            submitBtn.value = \"Update\"\n            submitBtn.addEventListener(\"click\", function(event){\n                event.preventDefault();\n                _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.update(columnID, columnTitle.value)\n                //Update Column DOM\n                let titleDOM = document.getElementById(`${columnID}`).querySelector('.columnTitle')\n                titleDOM.innerHTML = columnTitle.value\n                window.remove()\n            })\n            form.appendChild(submitBtn)\n        },\n        deleteColumnDiv(divID){\n            document.getElementById(divID).remove()\n        },\n        loadColumns(columnsArray, projectID){\n\n            for (let i = 0; i < columnsArray.length; i++){\n                //Render Column Divs\n                let newColumn = document.createElement(\"div\")\n                newColumn.setAttribute(\"class\", \"column\")\n                newColumn.setAttribute(\"id\", columnsArray[i].id)\n                let mainDiv = document.getElementById(`main${projectID}`)\n                mainDiv.appendChild(newColumn)\n\n                //Adds Column Header\n                let newColumnHeader = document.createElement(\"div\")\n                newColumnHeader.setAttribute(\"class\", \"columnHeader\")\n                newColumn.appendChild(newColumnHeader)\n                    // //Column Colour\n                    let columnDelete = document.createElement(\"img\")\n                    columnDelete.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__\n                    columnDelete.setAttribute(\"class\", \"columnDelete\")\n                    columnDelete.addEventListener('click', function(){\n                        _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.delete(this.parentElement.parentElement.id)\n                    })\n                    newColumnHeader.appendChild(columnDelete)\n                    //Column Title\n                    let newColumnTitle = document.createElement(\"div\")\n                    newColumnTitle.setAttribute(\"class\", \"columnTitle\")\n                    if(columnsArray[i].title != undefined){\n                        newColumnTitle.innerHTML = columnsArray[i].title\n                    }\n                    else {\n                        newColumnTitle.innerHTML = \"Placeholder Title\"\n                    }\n                    newColumnTitle.addEventListener('click', function(){\n                        columnsRender.editColumnTitle(columnsArray[i].id, `main${projectID}`)\n                    })\n                    newColumnHeader.appendChild(newColumnTitle)\n                \n                //Adds Column Body\n                let newColumnBody = document.createElement(\"div\")\n                newColumnBody.setAttribute(\"class\", \"columnBody\")\n                newColumn.appendChild(newColumnBody)\n                _tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.newTaskBtn(columnsArray[i].id)\n                columnsRender.hideNewColumnBtn()\n\n                if(columnsArray[i].tasks != null){\n                    _tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.loadTasks(columnsArray[i].tasks, columnsArray[i].id)\n                }\n\n            }\n\n\n\n            \n        }\n    }\n})()\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/DOM/columns.js?");

/***/ }),

/***/ "./src/modules/DOM/mainPage.js":
/*!*************************************!*\
  !*** ./src/modules/DOM/mainPage.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mainRender\": () => (/* binding */ mainRender),\n/* harmony export */   \"sideRender\": () => (/* binding */ sideRender)\n/* harmony export */ });\n/* harmony import */ var _columns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./columns */ \"./src/modules/DOM/columns.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/modules/OPS/projectLogic.js */ \"./src/modules/OPS/projectLogic.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/IMG/delete.png */ \"./src/modules/IMG/delete.png\");\n\n\n\n\nlet content = document.getElementById(\"content\");\n\nlet sideRender = (function(){\n    \n    return {\n    renderSideBar: function() {\n    //Render side bar\n    let sideDiv = document.createElement(\"div\")\n    sideDiv.setAttribute(\"id\", \"sideDiv\")\n    content.appendChild(sideDiv)\n\n        //Render side bar top for user info\n        let sideDivTop = document.createElement(\"div\")\n        sideDivTop.setAttribute(\"id\", \"sideDivTop\")\n        sideDiv.appendChild(sideDivTop)\n\n            //Render page title\n            let pageName = document.createElement(\"h1\")\n            pageName.innerHTML = \"My To Do Lists\"\n            sideDivTop.appendChild(pageName)\n\n            //User Details TBD\n\n\n        //Render side bar bottom for project selection\n        let sideDivBottom = document.createElement(\"div\")\n        sideDivBottom.setAttribute(\"id\", \"sideDivBottom\")\n        sideDiv.appendChild(sideDivBottom)\n\n            //New Project Button\n            let newProjectBtn = document.createElement(\"div\")\n            newProjectBtn.innerHTML = \"+\"\n            newProjectBtn.setAttribute(\"class\", \"projectDiv newProject\")\n            newProjectBtn.addEventListener('click', function() {\n                sideRender.setProjectTitle()\n            })\n            sideDivBottom.appendChild(newProjectBtn)\n        },\n    setProjectTitle: function(){\n        let projectID = \"proj\" + `${_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects.length}`\n        //Add New Project Div\n        let newProjectDiv = document.createElement(\"div\")\n        newProjectDiv.setAttribute(\"class\", \"projectDiv\")\n        newProjectDiv.setAttribute(\"id\", `${projectID}`)\n\n        let newProjectTitle = document.createElement(\"div\")\n        newProjectTitle.addEventListener(\"click\", function(){\n            mainRender.loadProject(this.parentElement.id)\n        })\n        newProjectTitle.setAttribute(\"id\", `${projectID}Title`)\n        newProjectTitle.setAttribute(\"class\", \"newProjectTitle\")\n        newProjectDiv.appendChild(newProjectTitle)\n\n        let projectDelete = document.createElement(\"img\")\n        projectDelete.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__\n        projectDelete.setAttribute(\"id\", `${projectID}Delete`)\n        projectDelete.setAttribute(\"class\", \"projectDelete\")\n        projectDelete.addEventListener(\"click\", function(){\n            _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.delete(this.parentElement)\n        })\n        newProjectDiv.appendChild(projectDelete)\n\n        document.getElementById(\"sideDivBottom\").appendChild(newProjectDiv)\n\n        //Create Pop Up Window\n        let window = document.createElement(\"div\")\n        window.setAttribute(\"class\", \"popWindow\")\n        document.getElementById(\"content\").appendChild(window)\n        //Create Form\n        let form = document.createElement(\"form\");\n        form.setAttribute(\"id\", \"projectform\")\n        form.textContent = \"Edit title\"\n        window.appendChild(form)\n        //Close Form Button\n        let closeFormBtn = document.createElement(\"div\")\n        closeFormBtn.id = \"closeFormBtn\"\n        closeFormBtn.textContent = \"x\"\n        closeFormBtn.addEventListener('click', function(){\n            window.style.display = \"none\"\n        })\n        form.appendChild(closeFormBtn)\n\n        //Create input element for column title\n        let projectTitleLable = document.createElement(\"label\")\n        projectTitleLable.for = \"projectTitle\"\n        projectTitleLable.textContent = \"Project name: \"\n        form.appendChild(projectTitleLable)\n        let projectTitle = document.createElement(\"input\")\n        projectTitle.type = \"text\"\n        projectTitle.required = true;\n        projectTitle.id = \"projectTitle\"\n        projectTitle.name = \"projectTitle\"\n        form.appendChild(projectTitle)\n\n        //Create Submit Button\n        let submitBtn = document.createElement(\"input\")\n        submitBtn.type = \"submit\"\n        submitBtn.name = \"submit\"\n        submitBtn.setAttribute(\"id\", \"columnSubmitBtn\")\n        submitBtn.value = \"Update\"\n        submitBtn.addEventListener(\"click\", function(event){\n            event.preventDefault();\n            _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.create(projectTitle.value)\n            newProjectTitle.innerHTML = projectTitle.value\n            window.remove()\n        })\n        form.appendChild(submitBtn)\n    },\n    deleteProjectDiv: function(projectID){\n       document.getElementById(projectID).remove()\n    },\n    loadProjectDiv: function(){\n       if(_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects != []){\n           for(let i = 0; i < _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects.length; i++){\n            //Add New Project Div\n            let newProjectDiv = document.createElement(\"div\")\n            newProjectDiv.setAttribute(\"class\", \"projectDiv\")\n            newProjectDiv.setAttribute(\"id\", `${_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects[i].id}`)\n\n            let newProjectTitle = document.createElement(\"div\")\n            newProjectTitle.addEventListener(\"click\", function(){\n                mainRender.loadProject(this.parentElement.id)\n            })\n            newProjectTitle.setAttribute(\"id\", `${_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects[i].id}Title`)\n            newProjectTitle.setAttribute(\"class\", \"newProjectTitle\")\n            newProjectDiv.appendChild(newProjectTitle)\n\n            let projectDelete = document.createElement(\"img\")\n            projectDelete.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_2__\n            projectDelete.setAttribute(\"id\", `${_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects[i].id}Delete`)\n            projectDelete.setAttribute(\"class\", \"projectDelete\")\n            projectDelete.addEventListener(\"click\", function(){\n                _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.delete(this.parentElement)\n            })\n            newProjectDiv.appendChild(projectDelete)\n            document.getElementById(\"sideDivBottom\").appendChild(newProjectDiv)\n\n           }\n       }     \n    }\n    }\n})()\n\nlet mainRender = (function(){\n        \n    return {\n        loadRightDiv: function(){\n            let rightDiv = document.createElement(\"div\")\n            rightDiv.setAttribute(\"id\", \"rightDiv\")\n            document.getElementById(\"content\").appendChild(rightDiv)\n        },\n        loadStartScreen: function(){\n            let startScreen = document.createElement(\"div\")\n            startScreen.innerHTML = \"Create & select a project to get started!\"\n            startScreen.setAttribute(\"id\", \"startScreen\")\n            document.getElementById(\"rightDiv\").appendChild(startScreen)\n        },\n\n        loadProject: function(projectID){\n            if(document.getElementById(\"rightDiv\") != null){\n                //Unload start screen\n                document.getElementById(\"rightDiv\").remove()\n                document.getElementById(\"content\").style.flexDirection = \"row\"\n            }\n            else if (document.getElementsByClassName(\"mainDiv\") != null){\n                let content = document.getElementById(\"content\").childNodes\n                content[1].remove()\n            }\n\n            //Renders the main section\n            let mainDiv = document.createElement(\"div\")\n            mainDiv.setAttribute(\"class\", `mainDiv`)\n            mainDiv.setAttribute(\"id\", `main${projectID}`)\n            document.getElementById(\"content\").appendChild(mainDiv)\n\n            let divID = `main${projectID}`\n\n            //Renders New Column Button\n            _columns__WEBPACK_IMPORTED_MODULE_0__.columnsRender.newColumnBtn(divID, projectID)\n\n            //Check for any existing columns to load\n            _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.load(projectID)\n        }\n    }\n\n})()\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/DOM/mainPage.js?");

/***/ }),

/***/ "./src/modules/DOM/tasks.js":
/*!**********************************!*\
  !*** ./src/modules/DOM/tasks.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tasksRender\": () => (/* binding */ tasksRender)\n/* harmony export */ });\n/* harmony import */ var _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../OPS/taskLogic.js */ \"./src/modules/OPS/taskLogic.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_IMG_flags_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/modules/IMG/flags.png */ \"./src/modules/IMG/flags.png\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_IMG_pencil_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/IMG/pencil.png */ \"./src/modules/IMG/pencil.png\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/modules/IMG/delete.png */ \"./src/modules/IMG/delete.png\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/modules/OPS/projectLogic.js */ \"./src/modules/OPS/projectLogic.js\");\n\n\n\n\n\n\n\nlet tasksRender = (function () {\n    let currentColumnID = \"\"\n    let currentTaskDIV = \"\"\n    let relevantColumnBody \n    let formData\n    let test\n    return {\n    newTaskBtn(columnID) {\n        //Add New Task Button\n        let relevantColumn = document.getElementById(columnID)\n        tasksRender.relevantColumnBody = relevantColumn.querySelector(\"div.columnBody\")\n        let newTaskBtn = document.createElement(\"div\")\n        newTaskBtn.setAttribute(\"class\", \"newTaskBtn\")\n        newTaskBtn.addEventListener('click', function () {\n            console.log(\"column\")\n            tasksRender.newTaskWindow(columnID)\n            test = this.parentElement.parentElement.id\n        })\n        tasksRender.relevantColumnBody.appendChild(newTaskBtn)\n        \n        //Renders text for New Task Button\n        let newTaskBtnText = document.createElement(\"h1\")\n        newTaskBtnText.innerHTML = \"+\"\n        newTaskBtn.appendChild(newTaskBtnText);\n        tasksRender.currentColumnID = columnID\n    },\n    newTaskWindow(preID, preTitle, preDescription, preStatus, prePriority, preDate) {\n        //Create pop-up window\n        let window = document.createElement(\"div\")\n        window.setAttribute(\"class\", \"popWindow\")\n        console.log(\"preID\")\n        console.log(preID)\n        let mainProjDiv = document.getElementById(preID).parentElement\n        document.getElementById(\"content\").appendChild(window)\n\n        //Create Form\n        let form = document.createElement(\"form\");\n        form.setAttribute(\"id\", \"form\")\n        if(preTitle != undefined) {\n            form.textContent = \"Update task\"\n        }\n        form.textContent = \"Create task\"\n        window.appendChild(form)\n\n        //Close Form Button\n        let closeFormBtn = document.createElement(\"div\")\n        closeFormBtn.id = \"closeFormBtn\"\n        closeFormBtn.textContent = \"x\"\n        closeFormBtn.addEventListener('click', function(){\n            window.remove()\n        })\n        form.appendChild(closeFormBtn)\n\n            //Create input element for task title\n            let taskTitleLable = document.createElement(\"label\")\n            taskTitleLable.for = \"tasktitle\"\n            taskTitleLable.textContent = \"Task name: \"\n            form.appendChild(taskTitleLable)\n            let taskTitle = document.createElement(\"input\")\n            taskTitle.type = \"text\"\n            taskTitle.id = \"taskTitle\"\n            taskTitle.name = \"taskTitle\"\n            if(preTitle != undefined) {\n                taskTitle.value = preTitle\n            }\n            // taskTitle.required = true\n            form.appendChild(taskTitle)\n\n            //Create input element for task description\n            let taskDescriptionLable = document.createElement(\"label\")\n            taskDescriptionLable.for = \"taskDescription\"\n            taskDescriptionLable.textContent = \"Task description: \"\n            form.appendChild(taskDescriptionLable)\n            let taskDescription = document.createElement(\"textarea\")\n            // taskDescription.type = \"textarea\" \n            taskDescription.setAttribute(\"id\", \"taskDescription\")\n            taskDescription.name = \"taskDescription\"\n            if(preDescription != undefined){\n                taskDescription.value = preDescription\n            }\n            // taskDescription.required = true\n            form.appendChild(taskDescription)\n\n            //Create input element for task status\n            let taskStatusLable = document.createElement(\"label\")\n            taskStatusLable.for = \"taskStatus\"\n            taskStatusLable.textContent = \"Current status: \"\n            form.appendChild(taskStatusLable)\n            let taskStatus = document.createElement(\"select\")\n            taskStatus.id = \"taskStatus\"\n            taskStatus.name = \"taskStatus\"\n            form.appendChild(taskStatus)\n                //Add Completed Option\n                let completed = document.createElement(\"option\")\n                completed.value = \"completed\"\n                let completedText = document.createTextNode(\"Completed\")\n                completed.appendChild(completedText)\n                taskStatus.appendChild(completed)\n\n                //Add In Progress Option\n                let inProgress = document.createElement(\"option\")\n                inProgress.value = \"inProgress\"\n                let inProgressText = document.createTextNode(\"In Progress\")\n                inProgress.appendChild(inProgressText)\n                taskStatus.appendChild(inProgress)\n\n                //Add Not Started Option\n                let notStarted = document.createElement(\"option\")\n                notStarted.value = \"notStarted\"\n                notStarted.selected = true\n                let notStartedText = document.createTextNode(\"Not Started\")\n                notStarted.appendChild(notStartedText)\n                taskStatus.appendChild(notStarted)\n            if(preStatus != undefined){\n                taskStatus.value = preStatus\n            }\n                \n            //Create input element for task priority\n            let taskPriorityLable = document.createElement(\"label\")\n            taskPriorityLable.for = \"taskPriority\"\n            taskPriorityLable.textContent = \"Task priority: \"\n            form.appendChild(taskPriorityLable)\n\n            let taskPriority = document.createElement(\"select\")\n            taskPriority.id = \"taskPriority\"\n            taskPriority.name = \"taskPriority\"\n            if(prePriority != undefined){\n                taskPriority.value = prePriority\n            }\n            \n            form.appendChild(taskPriority)\n                //Add High Option\n                let highPriority = document.createElement(\"option\")\n                highPriority.value = \"highPriority\"\n                let highPriorityText = document.createTextNode(\"High Priority\")\n                highPriority.appendChild(highPriorityText)\n                taskPriority.appendChild(highPriority)\n\n                //Add Low Option\n                let lowPriority = document.createElement(\"option\")\n                lowPriority.value = \"lowPriority\"\n                let lowPriorityText = document.createTextNode(\"Low Priority\")\n                lowPriority.appendChild(lowPriorityText)\n                taskPriority.appendChild(lowPriority)\n\n\n            //Create input element for task due date\n            let taskDateLable = document.createElement(\"label\")\n            taskDateLable.for = \"taskDate\"\n            taskDateLable.textContent = \"Task due date: \"\n            form.appendChild(taskDateLable)\n\n            let taskDate = document.createElement(\"input\")\n            taskDate.type = \"date\"\n            taskDate.id = \"taskDate\"\n            taskDate.name = \"taskDate\"\n            if(preDate != undefined){\n                taskDate.value = preDate\n            }\n            // taskDate.required = true\n            form.appendChild(taskDate)\n\n        \n        //Create Form Submit Button\n        let submitBtn = document.createElement(\"input\")\n        submitBtn.type = \"submit\"\n        submitBtn.name = \"submit\"\n        submitBtn.setAttribute(\"id\", \"submitBtn\")\n\n\n        if(preTitle != undefined) {\n            submitBtn.value = \"Update\"\n            submitBtn.addEventListener(\"click\", function(event){\n                event.preventDefault();\n                let id = preID\n                let title = taskTitle.value\n                let description = taskDescription.value\n                let status = taskStatus.value\n                let priority = taskPriority.value\n                let date = taskDate.value  \n                let update = true\n                _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.updateObject(id, title, description, status, priority, date)\n                tasksRender.updateTaskDOM(update, id, title, description, status, priority, date)\n                window.remove()\n            })            \n        }\n        else {\n            submitBtn.value = \"Create\"\n            submitBtn.addEventListener(\"click\", function(event){\n                event.preventDefault(); \n                let id = null\n                let title = taskTitle.value\n                let description = taskDescription.value\n                let status = taskStatus.value\n                let priority = taskPriority.value\n                let date = taskDate.value  \n                let update = false\n                tasksRender.addNewTaskDiv(title, description, status, priority, date)\n                tasksRender.updateTaskDOM(update, id, title, description, status, priority, date)\n                window.remove()\n            })\n        }\n\n        form.appendChild(submitBtn)\n        console.log(_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_4__.projectObject.objects)\n    },\n    addNewTaskDiv(title, description, status, priority, date) {\n        // Creates new object & adds to column\n        _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.create(test, title, description, status, priority, date)\n        let taskID = \"task\" + (_OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.objects.length - 1)\n        //Creates DOM Elements\n        let newTask = document.createElement(\"div\")\n        newTask.setAttribute(\"class\", \"newTask\")\n        newTask.setAttribute(\"id\", taskID)\n        let appendToColumn = document.getElementById(test).querySelector('.columnBody')\n        appendToColumn.appendChild(newTask)\n            //Task Colour Code\n            let newTaskColor = document.createElement(\"div\")\n            newTaskColor.setAttribute(\"class\", \"taskColor\")\n            newTask.appendChild(newTaskColor)\n                //Set Colour\n                if(status == \"notStarted\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor notStarted\")\n                }\n                else if (status == \"inProgress\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor inProgress\")\n                }\n                else if (status == \"completed\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor completed\")\n                }  \n            //Task Content Area\n            let taskContentArea = document.createElement(\"div\")\n            taskContentArea.setAttribute(\"class\", \"taskContentArea\")\n            newTask.appendChild(taskContentArea)\n        //Create Edit Pencil\n        let editPencil = document.createElement(\"img\")\n        editPencil.id = taskID + \"edit\"\n        editPencil.setAttribute(\"class\", \"editPencil\")\n        editPencil.src = _home_maxrostron_todolist_src_modules_IMG_pencil_png__WEBPACK_IMPORTED_MODULE_2__\n        //Enables edit task feature\n        editPencil.addEventListener('click', function(){\n            _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.openEdit(this.parentElement)\n        })\n        newTask.appendChild(editPencil)\n        currentTaskDIV = taskID\n        //Create Delete Task\n        let deleteTask = document.createElement(\"img\")\n        deleteTask.id = taskID + \"edit\"\n        deleteTask.setAttribute(\"class\", \"deleteTask\")\n        deleteTask.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_3__\n        deleteTask.addEventListener('click', function(){\n            _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.deleteObject(this.parentElement)\n        })\n        newTask.appendChild(deleteTask)\n\n    },\n    updateTaskDOM(update, id, title, description, status, priority, date){\n        if(update == false){\n            let taskDetailsUpper = document.createElement(\"div\")\n            taskDetailsUpper.setAttribute(\"class\", \"taskDetailsUpper\")\n            document.getElementById(currentTaskDIV).querySelector(\".taskContentArea\").appendChild(taskDetailsUpper)\n    \n            let taskDetailsLower = document.createElement(\"div\")\n            taskDetailsLower.setAttribute(\"class\", \"taskDetailsLower\")\n            document.getElementById(currentTaskDIV).querySelector(\".taskContentArea\").appendChild(taskDetailsLower)\n    \n    \n            let taskTitleDOM = document.createElement(\"h1\")\n            taskTitleDOM.setAttribute(\"class\", \"taskTitle\")\n            taskTitleDOM.innerHTML = title\n            taskDetailsUpper.appendChild(taskTitleDOM)\n    \n            let taskDateDOM = document.createElement(\"h2\")\n            taskDateDOM.setAttribute(\"class\", \"taskDate\")\n            taskDateDOM.innerHTML = date\n            taskDetailsLower.appendChild(taskDateDOM)\n    \n            let taskPriorityDOM = document.createElement(\"div\")\n            let taskFlagDOM = document.createElement(\"img\")\n            taskFlagDOM.id = currentTaskDIV + \"flag\"\n    \n            taskFlagDOM.src = _home_maxrostron_todolist_src_modules_IMG_flags_png__WEBPACK_IMPORTED_MODULE_1__\n                if(priority == \"highPriority\") {\n                    taskPriorityDOM.setAttribute(\"class\", \"flag highPriorityBox\")\n                    taskFlagDOM.setAttribute(\"class\", \"taskFlag highPriorityFlag\")\n                } \n                else if(priority == \"lowPriority\") {\n                    taskPriorityDOM.setAttribute(\"class\", \"flag lowPriorityBox\")\n                    taskFlagDOM.setAttribute(\"class\", \"taskFlag lowPriorityFlag\")\n                }\n            taskPriorityDOM.addEventListener(\"click\", function(){\n                _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.changePriority(this.parentElement.parentElement.parentElement.id)\n            })\n            taskDetailsLower.appendChild(taskPriorityDOM)\n            taskPriorityDOM.appendChild(taskFlagDOM)\n \n        }\n        else if (update == true){\n            let divTitleToUpdate = document.getElementById(id).querySelector(\".taskTitle\")\n            divTitleToUpdate.innerHTML = title\n\n            let divDateToUpdate = document.getElementById(id).querySelector(\".taskDate\")\n            divDateToUpdate.removeAttribute(\"class\")\n            divDateToUpdate.setAttribute(\"class\", \"taskDate\")\n            divDateToUpdate.innerHTML = date\n\n            let divPriorityToUpdate = document.getElementById(id).querySelector(\".flag\")\n\n            let divFlagToUpdate = document.getElementById(`${id}flag`)\n\n            divPriorityToUpdate.removeAttribute(\"class\")\n            divFlagToUpdate.removeAttribute(\"class\")\n\n            if(priority == \"highPriority\") {\n                divPriorityToUpdate.setAttribute(\"class\", \"flag highPriorityBox\")\n                divFlagToUpdate.setAttribute(\"class\", \"taskFlag highPriorityFlag\")\n            } \n            else if(priority == \"lowPriority\") {\n                divPriorityToUpdate.setAttribute(\"class\", \"flag lowPriorityBox\")\n                divFlagToUpdate.setAttribute(\"class\", \"taskFlag lowPriorityFlag\")\n            }\n\n            divPriorityToUpdate.addEventListener(\"click\", function(){\n                _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.changePriority(this.parentElement.parentElement.parentElement.id)\n            })\n\n            let divStatusToUpdate = document.getElementById(id).querySelector(\".taskColor\")\n\n            divStatusToUpdate.removeAttribute(\"class\")\n            divTitleToUpdate.removeAttribute(\"class\")\n            //Set Colour\n            if(status == \"notStarted\"){\n                divStatusToUpdate.setAttribute(\"class\", \"taskColor notStarted\")\n                divTitleToUpdate.setAttribute(\"class\", \"taskTitle\")\n            }\n            else if (status == \"inProgress\"){\n                divStatusToUpdate.setAttribute(\"class\", \"taskColor inProgress\")\n                divTitleToUpdate.setAttribute(\"class\", \"taskTitle\")\n            }\n            else if (status == \"completed\"){\n                divStatusToUpdate.setAttribute(\"class\", \"taskColor completed\")\n                divTitleToUpdate.setAttribute(\"class\", \"taskTitle strikethrough\")\n            } \n\n        }   \n    },\n    toggleHighPriority(taskDiv) {\n        let targetDiv = document.getElementById(taskDiv)\n        let targetDivPriorityDOM = targetDiv.querySelector('.flag')\n        let targetDivFlagDOM = targetDivPriorityDOM.childNodes[0]\n\n        targetDivPriorityDOM.removeAttribute(\"class\")\n        targetDivFlagDOM.removeAttribute(\"class\")\n\n        targetDivPriorityDOM.setAttribute(\"class\", \"flag highPriorityBox\")\n        targetDivFlagDOM.setAttribute(\"class\", \"taskFlag highPriorityFlag\")        \n    },\n    toggleLowPriority(taskDiv){\n        let targetDiv = document.getElementById(taskDiv)\n        let targetDivPriorityDOM = targetDiv.querySelector('.flag')\n        let targetDivFlagDOM = targetDivPriorityDOM.childNodes[0]\n\n        targetDivPriorityDOM.removeAttribute(\"class\")\n        targetDivFlagDOM.removeAttribute(\"class\")\n\n        targetDivPriorityDOM.setAttribute(\"class\", \"flag lowPriorityBox\")\n        targetDivFlagDOM.setAttribute(\"class\", \"taskFlag lowPriorityFlag\")   \n    },\n    divToDelete(div){\n        div.remove()\n    },\n    loadTasks(taskArrayToLoad, columnID){\n\n        for(let i = 0; i < taskArrayToLoad.length; i++){\n\n        //Creates DOM Elements\n        let newTask = document.createElement(\"div\")\n        newTask.setAttribute(\"class\", \"newTask\")\n        newTask.setAttribute(\"id\", taskArrayToLoad[i].id)\n        let appendToColumn = document.getElementById(columnID).querySelector('.columnBody')\n        appendToColumn.appendChild(newTask)\n            //Task Colour Code\n            let newTaskColor = document.createElement(\"div\")\n            newTaskColor.setAttribute(\"class\", \"taskColor\")\n            newTask.appendChild(newTaskColor)\n                //Set Colour\n                if(taskArrayToLoad[i].status == \"notStarted\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor notStarted\")\n                }\n                else if (taskArrayToLoad[i].status == \"inProgress\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor inProgress\")\n                }\n                else if (taskArrayToLoad[i].status == \"completed\"){\n                    newTaskColor.setAttribute(\"class\", \"taskColor completed\")\n                }  \n            //Task Content Area\n            let taskContentArea = document.createElement(\"div\")\n            taskContentArea.setAttribute(\"class\", \"taskContentArea\")\n            newTask.appendChild(taskContentArea)\n        //Create Edit Pencil\n        let editPencil = document.createElement(\"img\")\n        editPencil.id = taskArrayToLoad[i].id + \"edit\"\n        editPencil.setAttribute(\"class\", \"editPencil\")\n        editPencil.src = _home_maxrostron_todolist_src_modules_IMG_pencil_png__WEBPACK_IMPORTED_MODULE_2__\n        //Enables edit task feature\n        editPencil.addEventListener('click', function(){\n            _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.openEdit(this.parentElement)\n        })\n        newTask.appendChild(editPencil)\n        currentTaskDIV = taskArrayToLoad[i].id\n        //Create Delete Task\n        let deleteTask = document.createElement(\"img\")\n        deleteTask.id = taskArrayToLoad[i].id + \"edit\"\n        deleteTask.setAttribute(\"class\", \"deleteTask\")\n        deleteTask.src = _home_maxrostron_todolist_src_modules_IMG_delete_png__WEBPACK_IMPORTED_MODULE_3__\n        deleteTask.addEventListener('click', function(){\n            _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.deleteObject(this.parentElement)\n        })\n\n        //Create Upper Task Dom\n        let taskDetailsUpper = document.createElement(\"div\")\n        taskDetailsUpper.setAttribute(\"class\", \"taskDetailsUpper\")\n        document.getElementById(taskArrayToLoad[i].id).querySelector(\".taskContentArea\").appendChild(taskDetailsUpper)\n\n        //Create Lower Task Dom\n        let taskDetailsLower = document.createElement(\"div\")\n        taskDetailsLower.setAttribute(\"class\", \"taskDetailsLower\")\n        document.getElementById(taskArrayToLoad[i].id).querySelector(\".taskContentArea\").appendChild(taskDetailsLower)\n\n        //Create taskTitle\n        let taskTitleDOM = document.createElement(\"h1\")\n        taskTitleDOM.setAttribute(\"class\", \"taskTitle\")\n        taskTitleDOM.innerHTML = taskArrayToLoad[i].title\n        taskDetailsUpper.appendChild(taskTitleDOM)\n\n        //Create taskDate\n        let taskDateDOM = document.createElement(\"h2\")\n        taskDateDOM.setAttribute(\"class\", \"taskDate\")\n        taskDateDOM.innerHTML = taskArrayToLoad[i].date\n        taskDetailsLower.appendChild(taskDateDOM)\n\n        //Add priority DOM\n        let taskPriorityDOM = document.createElement(\"div\")\n        let taskFlagDOM = document.createElement(\"img\")\n        taskFlagDOM.id = currentTaskDIV + \"flag\"\n\n        taskFlagDOM.src = _home_maxrostron_todolist_src_modules_IMG_flags_png__WEBPACK_IMPORTED_MODULE_1__\n            if(taskArrayToLoad[i].priority == \"highPriority\") {\n                taskPriorityDOM.setAttribute(\"class\", \"flag highPriorityBox\")\n                taskFlagDOM.setAttribute(\"class\", \"taskFlag highPriorityFlag\")\n            } \n            else if(taskArrayToLoad[i].priority == \"lowPriority\") {\n                taskPriorityDOM.setAttribute(\"class\", \"flag lowPriorityBox\")\n                taskFlagDOM.setAttribute(\"class\", \"taskFlag lowPriorityFlag\")\n            }\n        taskPriorityDOM.addEventListener(\"click\", function(){\n            _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_0__.taskObject.changePriority(this.parentElement.parentElement.parentElement.id)\n        })\n        taskDetailsLower.appendChild(taskPriorityDOM)\n        taskPriorityDOM.appendChild(taskFlagDOM)\n\n        newTask.appendChild(deleteTask)\n\n        }\n\n    }\n}     \n})();\n\n\n\n\n\n//Need to be able to move tasks between columns, and move columns left right - draggable would be cool\n\n//Need to assign columns to projects level\n\n//Need to figure out storage\n\n//Nice to figure out a login page\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/DOM/tasks.js?");

/***/ }),

/***/ "./src/modules/IMG/delete.png":
/*!************************************!*\
  !*** ./src/modules/IMG/delete.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"4cf85250644be08b0e98.png\";\n\n//# sourceURL=webpack://todolist/./src/modules/IMG/delete.png?");

/***/ }),

/***/ "./src/modules/IMG/flags.png":
/*!***********************************!*\
  !*** ./src/modules/IMG/flags.png ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"ebb5e4bcf4aa597311a4.png\";\n\n//# sourceURL=webpack://todolist/./src/modules/IMG/flags.png?");

/***/ }),

/***/ "./src/modules/IMG/pencil.png":
/*!************************************!*\
  !*** ./src/modules/IMG/pencil.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"f6f97fc3eaaf83d72f3f.png\";\n\n//# sourceURL=webpack://todolist/./src/modules/IMG/pencil.png?");

/***/ }),

/***/ "./src/modules/OPS/columnLogic.js":
/*!****************************************!*\
  !*** ./src/modules/OPS/columnLogic.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"columnObject\": () => (/* binding */ columnObject)\n/* harmony export */ });\n/* harmony import */ var _home_maxrostron_todolist_src_modules_DOM_columns_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/modules/DOM/columns.js */ \"./src/modules/DOM/columns.js\");\n/* harmony import */ var _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OPS/taskLogic.js */ \"./src/modules/OPS/taskLogic.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/OPS/projectLogic.js */ \"./src/modules/OPS/projectLogic.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/modules/OPS/storage.js */ \"./src/modules/OPS/storage.js\");\n\n\n\n\n\nlet columnObject = {\n\n    objects: [],\n    create: function(projectID){\n        let column = {\n            id: \"col\" + this.objects.length,\n            title: \"\",\n            type: \"column\",\n            tasks: []\n        }\n\n        let project = _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_2__.projectObject.objects.find(\n            ({ id }) => id === projectID\n        )\n        project.columns.push(column)\n        columnObject.objects.push(column)\n\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n        \n    },\n    search: function(idKey, myArray){\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].id === idKey) {\n                return myArray[i];\n            }\n        }\n    },\n    update: function(columnID, newColumnTitle){\n        let objectToUpdate = columnObject.search(`${columnID}`, columnObject.objects)\n        objectToUpdate.title = newColumnTitle\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n\n    },\n    delete: function(columnID){\n        let objectToUpdate = columnObject.search(columnID, columnObject.objects)        \n\n        _home_maxrostron_todolist_src_modules_DOM_columns_js__WEBPACK_IMPORTED_MODULE_0__.columnsRender.deleteColumnDiv(columnID)\n\n        let objectIndex = columnObject.objects.indexOf(objectToUpdate)\n\n        _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_1__.taskObject.deleteObjectColumn(columnID)\n\n        for(let i=0; i < columnObject.objects.length; i++){\n            if(i === objectIndex){\n                return columnObject.objects.splice(i, 1);\n            }\n        }\n        (0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n\n    }\n\n};\n\n\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/OPS/columnLogic.js?");

/***/ }),

/***/ "./src/modules/OPS/projectLogic.js":
/*!*****************************************!*\
  !*** ./src/modules/OPS/projectLogic.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projectObject\": () => (/* binding */ projectObject)\n/* harmony export */ });\n/* harmony import */ var _home_maxrostron_todolist_src_modules_DOM_columns_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/modules/DOM/columns.js */ \"./src/modules/DOM/columns.js\");\n/* harmony import */ var _OPS_taskLogic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OPS/taskLogic.js */ \"./src/modules/OPS/taskLogic.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_DOM_mainPage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/DOM/mainPage.js */ \"./src/modules/DOM/mainPage.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/modules/OPS/storage.js */ \"./src/modules/OPS/storage.js\");\n\n\n\n\n\nlet projectObject = {\n\n    objects: [],\n    create: function(projTitle){\n        let project = {\n            id: \"proj\" + this.objects.length,\n            title: \"\",\n            type: \"project\",\n            columns: []\n        }\n        project.title = projTitle\n        projectObject.objects.push(project)\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n    },\n    search: function(idKey, myArray){\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].id === idKey) {\n                return myArray[i];\n            }\n        }\n    },\n    update: function(projectID, newColumnTitle){\n        let objectToUpdate = projectObject.search(`${projectID}`, projectObject.objects)\n        objectToUpdate.title = newProjectTitle\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n    },\n    load: function(projectID){\n        let objectsToLoad = projectObject.search(projectID, projectObject.objects)\n        let columnsToLoad = objectsToLoad.columns\n\n        if(columnsToLoad != null){\n            _home_maxrostron_todolist_src_modules_DOM_columns_js__WEBPACK_IMPORTED_MODULE_0__.columnsRender.loadColumns(columnsToLoad, projectID)\n        }\n\n    },\n    delete: function(projectID){\n        let objectToUpdate = projectObject.search(projectID.id, projectObject.objects)\n\n        let objectIndex = projectObject.objects.indexOf(objectToUpdate)\n\n        _home_maxrostron_todolist_src_modules_DOM_mainPage_js__WEBPACK_IMPORTED_MODULE_2__.sideRender.deleteProjectDiv(projectID.id)\n\n        for(let i=0; i < projectObject.objects.length; i++){\n            console.log(i)\n            if(i === objectIndex){\n                return projectObject.objects.splice(i, 1);\n            }\n        }\n        (0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_3__.saveProjects)()\n    }\n\n\n};\n\n\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/OPS/projectLogic.js?");

/***/ }),

/***/ "./src/modules/OPS/storage.js":
/*!************************************!*\
  !*** ./src/modules/OPS/storage.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"saveProjects\": () => (/* binding */ saveProjects),\n/* harmony export */   \"loadProjects\": () => (/* binding */ loadProjects)\n/* harmony export */ });\n/* harmony import */ var _DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOM/mainPage */ \"./src/modules/DOM/mainPage.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/modules/OPS/projectLogic.js */ \"./src/modules/OPS/projectLogic.js\");\n\n\n\nfunction saveProjects(){\n    console.log(\"saving\" + _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects)\n    localStorage.setItem(\"myProjects\", JSON.stringify(_home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects))\n}\n\nfunction loadProjects(){\n    _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects = []\n    console.log(\"loading\")\n    console.log(localStorage.getItem(\"myProjects\"))\n    _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects = localStorage.getItem(\"myProjects\")\n    _DOM_mainPage__WEBPACK_IMPORTED_MODULE_0__.sideRender.loadProjectDiv()\n    console.log(\"loaded\" + _home_maxrostron_todolist_src_modules_OPS_projectLogic_js__WEBPACK_IMPORTED_MODULE_1__.projectObject.objects)\n}\n\n\n\n\n//# sourceURL=webpack://todolist/./src/modules/OPS/storage.js?");

/***/ }),

/***/ "./src/modules/OPS/taskLogic.js":
/*!**************************************!*\
  !*** ./src/modules/OPS/taskLogic.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"taskObject\": () => (/* binding */ taskObject)\n/* harmony export */ });\n/* harmony import */ var _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../OPS/columnLogic.js */ \"./src/modules/OPS/columnLogic.js\");\n/* harmony import */ var _DOM_tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DOM/tasks */ \"./src/modules/DOM/tasks.js\");\n/* harmony import */ var _home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/modules/OPS/storage.js */ \"./src/modules/OPS/storage.js\");\n\n\n\n\nlet taskObject = {\n\n    objects: [],\n    create: function(columnID, title, description, status, priority, date){\n\n        let task = {\n            id: \"task\" + this.objects.length,\n            col: columnID,\n            type: \"task\",\n            title: title,\n            description: description,\n            status: status,\n            priority: priority,\n            date: date\n        }\n        let column = _OPS_columnLogic_js__WEBPACK_IMPORTED_MODULE_0__.columnObject.objects.find(\n            ({ id }) => id === columnID\n        )\n        column.tasks.push(task)\n        this.objects.push(task)\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    },\n    search: function(idKey, myArray){\n            for (var i=0; i < myArray.length; i++) {\n                if (myArray[i].id === idKey) {\n                    return myArray[i];\n                }\n            }\n    },\n    openEdit: function(taskDiv){\n        let objectToUpdate = taskObject.search(`${taskDiv.id}`, taskObject.objects)\n\n        let preID = objectToUpdate.id\n        let preTitle = objectToUpdate.title\n        let preDescription = objectToUpdate.description\n        let preStatus = objectToUpdate.status\n        let prePriority = objectToUpdate.priority\n        let preDate = objectToUpdate.date\n\n        _DOM_tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.newTaskWindow(preID, preTitle, preDescription, preStatus, prePriority, preDate)\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    },\n    updateObject: function(id, title, description, status, priority, date){\n        let objectToUpdate = taskObject.search(`${id}`, taskObject.objects)\n\n        objectToUpdate.title = title\n        objectToUpdate.description = description\n        objectToUpdate.status = status\n        objectToUpdate.priority = priority\n        objectToUpdate.date = date\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    },\n    changePriority: function(taskDiv){\n        let currentTask = taskDiv\n        let objectToUpdate = taskObject.search(`${taskDiv}`, taskObject.objects)\n\n        if(objectToUpdate.priority == \"lowPriority\"){\n            objectToUpdate.priority = \"highPriority\"\n            _DOM_tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.toggleHighPriority(currentTask)\n        }\n        else if (objectToUpdate.priority == \"highPriority\"){\n            objectToUpdate.priority = \"lowPriority\"\n            _DOM_tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.toggleLowPriority(currentTask)\n        } \n        (0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    },\n    deleteObject: function(taskDiv){\n        let objectToUpdate = taskObject.search(`${taskDiv.id}`, taskObject.objects)\n        \n\n        _DOM_tasks__WEBPACK_IMPORTED_MODULE_1__.tasksRender.divToDelete(taskDiv)\n\n        let objectIndex = taskObject.objects.indexOf(objectToUpdate)\n\n        for(let i=0; i < taskObject.objects.length; i++){\n            console.log(i)\n            if(i === objectIndex){\n                return taskObject.objects.splice(i, 1);\n            }\n        }\n        (0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    },\n    deleteObjectColumn: function(columnID){\n        taskObject.objects = taskObject.objects.filter(\n            obj => obj.col !== `${columnID}`\n        )\n        ;(0,_home_maxrostron_todolist_src_modules_OPS_storage_js__WEBPACK_IMPORTED_MODULE_2__.saveProjects)()\n    }\n\n    }\n        \n\n\n//# sourceURL=webpack://todolist/./src/modules/OPS/taskLogic.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;